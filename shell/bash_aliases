# Set personal aliases, overriding those provided by framework or bash_profile

# Convenience
alias cask='brew cask'
alias where='which'
alias brwe='brew' #typoes


# RESOLVER aliases
alias r='rslv'
alias core-services="cd /Code/core-services"
alias core-client="cd /Code/core-client"
alias core-packages="cd /Code/npm-packages"
alias resolver-cli="cd /Code/dev-tooling/resolver-cli"
alias fdc="cd /Code/dev-tooling/fdc"

# PERSONAL Computer aliases
alias repos="cd ~/repos"

# Flush DNS cache
alias flushdns="dscacheutil -flushcache"

# Show/hide all desktop icons (useful when presenting)
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"

# Show/hide hidden files/folders
alias showhiddenfiles="defaults write com.apple.finder AppleShowAllFiles YES && killall Finder"
alias hidehiddenfiles="defaults write com.apple.finder AppleShowAllFiles NO && killall Finder"

# restart macOS camera
alias killcamera="sudo killall AppleCameraAssistant; sudo killall VDCAssistant"

# NPM aliases
alias npmglist="npm list -g --depth=0"

# Docker
alias d=docker
alias dc=docker-compose
docker_bash() {
    d exec -it $1 bash
}
docker_exec() {
    container=$1
    shift
    d exec -it $container $@
}
alias dbash=docker_bash
alias de=docker_exec
docker_stop_and_remove() {
    d stop $1 && d rm $1
}
alias dsr=docker_stop_and_remove
alias dcl='dc logs -f'
alias dpsa='d ps -a'
alias dps='dpsa --format "table {{.Names}}\t{{.Image}}\t{{.RunningFor}}\t{{.Status}}"'
alias dpsp='dpsa --format "table {{.Names}}\t{{.Ports}}"'
alias di='d images'
alias dpsjson='dpsa --format "{ \"name\": {{json .Names}}, \"status\": {{json .Status}} }"'
alias dclean='docker images --no-trunc | grep "<none>" | awk '\''{ print $3 }'\'' | gxargs -r docker rmi'

# Amazon AWS aliases
alias a=aws

########################################
# awscli / localstack
########################################
aws_localstack() {
    aws_service=$1
    case $aws_service in
        s3)
            localstack_port=4572
        ;;
	ssm)
	    localstack_port=4583
	;;
        lambda)
            localstack_port=4574
        ;;
        *)
            return 1;
        ;;
    esac
    aws --endpoint-url=http://localhost:$localstack_port $*
}
alias al=aws_localstack